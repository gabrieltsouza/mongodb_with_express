#before -> docker volume create --name volume_mongo_database_files --opt type=none --opt device=D:\ecommerce_fhvgts\mongo_files --opt o=bind
#https://medium.com/@renato.groffe/mongodb-mongo-express-docker-compose-montando-rapidamente-um-ambiente-para-uso-824f25ca6957

#to up containers 
#docker-compose up -d

#to list networks
#docker network ls

#to list containers
#docker-compose ps
#docker container ps
#docker stats

#to stop containers
#docker-compose stop

#to stop and remove containers
#docker-compose down

#to list volumes
#docker volume ls

#inspect volume
#docker volume inspect mongodb_with_express_volume_mongo_database_files

#to remove volume
#docker volume rm mongodb_with_express_volume_mongo_database_files

#Logs do container
#docker logs -f mongodb_with_express_mongo_1
#docker logs -f mongodb_with_express_mongo-express_1

#shell
#docker container exec -it mongodb_with_express_mongo_1 bash

version: '3'

services:
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: dba_express
      ME_CONFIG_BASICAUTH_PASSWORD: Mongo@Exp2020!
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: Mongo#DB2020!
    links:
      - mongo
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Mongo#DB2020!
    ports:
      - "27017:27017"
    volumes:
      - volume_mongo_database_files:/data/db
    networks:
      - mongo-compose-network

volumes:
  volume_mongo_database_files:

#volumes:
#  volume_mongo_database_files:
#    driver: local
#    driver_opts:
#       o: bind
#       type: none
#       device: .\mongo_files
       #device: D:\Gabriel\Projetos\gitHub\Database\mongodb_with_express\mongo_files

networks: 
    mongo-compose-network:
      driver: bridge
      